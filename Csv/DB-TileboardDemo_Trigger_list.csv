BPA_BatchePauses,1497772393,BPA_BatchePauses_Trigger,"-- ============================================= -- Author:		Jean-Pierre Poulin -- Create date: 2013-03-29 -- Description: Trigger pour updater COB_CACHE_OBJECT -- ============================================= CREATE TRIGGER [dbo].[BPA_BatchePauses_Trigger]    ON  [dbo].[BPA_BatchePauses]    AFTER INSERT,DELETE,UPDATE AS  BEGIN 	SET NOCOUNT ON;  	declare @clientId as uniqueidentifier 	declare @selectTable table (PLB_cID uniqueidentifier) 	declare @table table (CLI_cID uniqueidentifier)  	insert into @selectTable (PLB_cID) select distinct(PLB_cID) from deleted union select distinct(PLB_cID) from inserted  	insert into @table (CLI_cID) select distinct(CLI_cID) from @selectTable TB 	join [dbo].[PLB_ProductionLineBatches] plb on plb.PLB_cID = TB.PLB_cID 	join [dbo].[PLI_ProductionLines] pli on pli.PLI_cID = plb.PLI_cID  	while ((select count(*) from @table) > 0) 	begin 		select top 1 @clientId = CLI_cID from @table 		exec dbo.COB_Update_FromTrigger 'Pause', null, @clientId 		delete from @table where CLI_cID = @clientId 	end  END ",2015-05-22 11:28:24.187,2015-05-10 09:40:41.863,0,"U ",TR,SQL_TRIGGER,0,1,1,1,1
CAT_Categories,1513772450,CAT_Categories_Trigger,"CREATE TRIGGER [dbo].[CAT_Categories_Trigger]    ON  dbo.CAT_Categories    AFTER INSERT,DELETE,UPDATE AS  BEGIN 	SET NOCOUNT ON;      -- Insert statements for trigger here 	declare @clientId as uniqueidentifier 	declare @selectTable table (PLI_cID uniqueidentifier) 	declare @table table (CLI_cID uniqueidentifier)  	insert into @selectTable (PLI_cID) select distinct(PLI_cID) from deleted union select distinct(PLI_cID) from inserted  	insert into @table (CLI_cID) select distinct(CLI_cID) from @selectTable TB 	join [dbo].[PLI_ProductionLines] pli on pli.PLI_cID = TB.PLI_cID  	while ((select count(*) from @table) > 0) 	begin 		select top 1 @clientId = CLI_cID from @table 		exec dbo.COB_Update_FromTrigger 'Category', null, @clientId 		delete from @table where CLI_cID = @clientId 	end   END ",2015-05-22 11:28:24.253,2015-05-10 09:40:41.113,0,"U ",TR,SQL_TRIGGER,0,1,1,1,1
CLI_Clients,1529772507,CLI_Clients_Trigger," -- ============================================= -- Author:		Jean-Pierre Poulin -- Create date: 2012-11-27 -- Description: Trigger pour updater COB_CacheObjects -- ============================================= CREATE TRIGGER [dbo].[CLI_Clients_Trigger]    ON  [dbo].[CLI_Clients]    AFTER INSERT,DELETE,UPDATE AS  BEGIN 	SET NOCOUNT ON; 	     -- Insert statements for trigger here 		declare @clientId as uniqueidentifier 	declare @table table (CLI_cID uniqueidentifier)  	insert into @table (CLI_cID) select distinct(CLI_cID) from deleted union select distinct(CLI_cID) from inserted  	while ((select count(*) from @table) > 0) 	begin 		select top 1 @clientId = CLI_cID from @table 		exec dbo.COB_Update_FromTrigger 'Client', null, @clientId 		delete from @table where CLI_cID = @clientId 	end END ",2015-05-22 11:28:24.277,2015-05-10 09:40:40.793,0,"U ",TR,SQL_TRIGGER,0,1,1,1,1
COM_Comments,1545772564,COM_Comments_Trigger,"-- ============================================= -- Author:		Jean-Pierre Poulin -- Create date: 2012-11-27 -- Description: Trigger pour updater COB_CACHE_OBJECT -- ============================================= CREATE TRIGGER [dbo].[COM_Comments_Trigger]    ON  [dbo].[COM_Comments]    AFTER INSERT,DELETE,UPDATE AS  BEGIN 	SET NOCOUNT ON;  	-- Insert statements for trigger here 	declare @clientId as uniqueidentifier 	declare @table table (CLI_cID uniqueidentifier)  	insert into @table (CLI_cID) select distinct(CLI_cID) from deleted union select distinct(CLI_cID) from inserted  	while ((select count(*) from @table) > 0) 	begin 		select top 1 @clientId = CLI_cID from @table 		exec dbo.COB_Update_FromTrigger 'Comment', null, @clientId 		delete from @table where CLI_cID = @clientId 	end  END ",2015-05-22 11:28:24.293,2015-05-10 09:40:50.780,0,"U ",TR,SQL_TRIGGER,0,1,1,1,1
DowntimeType,1481772336,DowntimeType_Trigger,"-- ============================================= -- Author:		Jean-Pierre Poulin -- Create date: 2012-11-27 -- Description: Trigger pour updater COB_CACHE_OBJECT -- ============================================= create TRIGGER [dbo].[DowntimeType_Trigger]    ON  dbo.DowntimeType    AFTER INSERT,DELETE,UPDATE AS  BEGIN 	SET NOCOUNT ON;  	-- Insert statements for trigger here 	declare @clientId as uniqueidentifier 	declare @table table (CLI_cID uniqueidentifier)  	insert into @table (CLI_cID) select distinct(CLI_cID) from deleted union select distinct(CLI_cID) from inserted  	while ((select count(*) from @table) > 0) 	begin 		select top 1 @clientId = CLI_cID from @table 		exec dbo.COB_Update_FromTrigger 'DowntimeType', null, @clientId 		delete from @table where CLI_cID = @clientId 	end  END ",2015-05-22 11:28:24.167,2015-05-22 11:28:20.993,0,"U ",TR,SQL_TRIGGER,0,1,1,1,1
EMP_Employees,1561772621,EMP_Employees_Trigger,"-- ============================================= -- Author:		Jean-Pierre Poulin -- Create date: 2012-11-27 -- Description: Trigger pour updater COB_CacheObjects -- ============================================= CREATE TRIGGER [dbo].[EMP_Employees_Trigger]    ON  [dbo].[EMP_Employees]    AFTER INSERT,DELETE,UPDATE AS  BEGIN 	SET NOCOUNT ON;  		-- Insert statements for trigger here 	declare @clientId as uniqueidentifier 	declare @table table (CLI_cID uniqueidentifier)  	insert into @table (CLI_cID) select distinct(CLI_cID) from deleted union select distinct(CLI_cID) from inserted  	while ((select count(*) from @table) > 0) 	begin 		select top 1 @clientId = CLI_cID from @table 		exec dbo.COB_Update_FromTrigger 'Employee', null, @clientId 		delete from @table where CLI_cID = @clientId 	end END ",2015-05-22 11:28:24.310,2015-05-10 09:40:45.303,0,"U ",TR,SQL_TRIGGER,0,1,1,1,1
FDV_FormDefinitionVersions,1577772678,FDV_FormDefinitionVersions_Trigger,"-- ============================================= -- Author:		Jean-Pierre Poulin -- Create date: 2012-07-05 -- Description: Trigger pour updater COB_CACHE_OBJECT -- ============================================= CREATE TRIGGER [dbo].[FDV_FormDefinitionVersions_Trigger]    ON  dbo.FDV_FormDefinitionVersions    AFTER INSERT,DELETE,UPDATE AS  BEGIN 	SET NOCOUNT ON;  	    -- Insert statements for trigger here 	declare @clientId as uniqueidentifier 	declare @selectTable table (FOD_cID uniqueidentifier) 	declare @table table (CLI_cID uniqueidentifier)  	insert into @selectTable (FOD_cID) select distinct(FOD_cID) from deleted union select distinct(FOD_cID) from inserted  	insert into @table (CLI_cID) select distinct(CLI_cID) from @selectTable TB 	join [dbo].FOD_FormDefinitions fod on fod.FOD_cID = TB.FOD_cID  	while ((select count(*) from @table) > 0) 	begin 		select top 1 @clientId = CLI_cID from @table 		exec dbo.COB_Update_FromTrigger 'FormDefinitionVersion', null, @clientId 		delete from @table where CLI_cID = @clientId 	end END ",2015-05-22 11:28:24.333,2015-05-10 09:40:47.807,0,"U ",TR,SQL_TRIGGER,0,1,1,1,1
MDE_MeasureDefinitions,1593772735,MDE_MeasureDefinitions_Trigger,"-- ============================================= -- Author:		Jean-Pierre Poulin -- Create date: 2012-11-27 -- Description: Trigger pour updater COB_CacheObjects -- ============================================= CREATE TRIGGER [dbo].[MDE_MeasureDefinitions_Trigger]    ON  dbo.MDE_MeasureDefinitions    AFTER INSERT,DELETE,UPDATE AS  BEGIN 	SET NOCOUNT ON;  	declare @clientId as uniqueidentifier 	declare @table table (CLI_cID uniqueidentifier)  	insert into @table (CLI_cID) select distinct(CLI_cID) from deleted union select distinct(CLI_cID) from inserted  	while ((select count(*) from @table) > 0) 	begin 		select top 1 @clientId = CLI_cID from @table 		exec dbo.COB_Update_FromTrigger 'MeasureDefinition', null, @clientId 		delete from @table where CLI_cID = @clientId 	end  END ",2015-05-22 11:28:24.377,2015-05-10 09:40:41.253,0,"U ",TR,SQL_TRIGGER,0,1,1,1,1
NEM_NotificationEventMinMax,1609772792,NEM_NotificationEventMinMax_Trigger,"-- ============================================= -- Author:		Jean-Pierre Poulin -- Create date: 2013-03-29 -- Description: Trigger pour updater COB_CACHE_OBJECT -- ============================================= CREATE TRIGGER [dbo].[NEM_NotificationEventMinMax_Trigger]    ON  dbo.NEM_NotificationEventMinMax    AFTER INSERT,DELETE,UPDATE AS  BEGIN 	SET NOCOUNT ON;  	declare @userId as uniqueidentifier 	declare @table table (USE_cID uniqueidentifier)  	insert into @table (USE_cID) 	select distinct(USE_cID) from deleted 	join NOT_Notifications nt on nt.NOT_cId = deleted.NOT_cID 	union 	select distinct(USE_cID) from inserted 	join NOT_Notifications nt on nt.NOT_cId = inserted.NOT_cID  	while ((select count(*) from @table) > 0) 	begin 		select top 1 @userId = USE_cID from @table 		exec dbo.COB_Update_FromTrigger 'NotificationEvent', @userId 		delete from @table where USE_cID = @userId 	end  END ",2015-05-22 11:28:24.403,2015-05-10 09:40:53.533,0,"U ",TR,SQL_TRIGGER,0,1,1,1,1
NOT_Notifications,1625772849,NOT_Notifications_Trigger,"-- ============================================= -- Author:		Jean-Pierre Poulin -- Create date: 2012-11-27 -- Description: Trigger pour updater COB_CacheObjects -- ============================================= CREATE TRIGGER [dbo].[NOT_Notifications_Trigger]    ON  [dbo].[NOT_Notifications]    AFTER INSERT,DELETE,UPDATE AS  BEGIN 	SET NOCOUNT ON;  	declare @userId as uniqueidentifier 	declare @table table (USE_cID uniqueidentifier)  	insert into @table (USE_cID) select distinct(USE_cID) from deleted union select distinct(USE_cID) from inserted  	while ((select count(*) from @table) > 0) 	begin 		select top 1 @userId = USE_cID from @table 		exec dbo.COB_Update_FromTrigger 'Notification', @userId 		delete from @table where USE_cID = @userId 	end  		-- Populate HNO_HistoryNotifications 	declare @notifications table  	( 		NOT_cID uniqueidentifier, 		Inserted_NOT_dtLastModified datetime, 		Deleted_NOT_dtLastModified datetime null, 		NOT_dtDeleted datetime null, 		NOT_bActive bit, 		NOT_cOperator varchar(2), 		NOT_rValue1 real, 		NOT_rValue2 real, 		NOT_cValue nvarchar(100) 	)  	insert into @notifications 	select inserted.[NOT_cId], inserted.[NOT_dtLastModified] as Inserted_NOT_dtLastModified, deleted.[NOT_dtLastModified] as Deleted_NOT_dtLastModified, inserted.[NOT_dtDeleted], 		inserted.NOT_bActive, inserted.NOT_cOperator, inserted.NOT_rValue1, inserted.NOT_rValue2, inserted.NOT_cValue 	from inserted 	left join deleted on deleted.NOT_cId = inserted.NOT_cID 	where not exists(select * from [dbo].[HNO_HistoryNotifications] hno where hno.NOT_cID = inserted.NOT_cId and hno.[HNO_dtLastModified] > inserted.[NOT_dtLastModified]) 	and 	( 		deleted.NOT_cId is null 		OR inserted.NOT_bActive <> deleted.NOT_bActive 		OR inserted.NOT_cOperator <> deleted.NOT_cOperator 		OR isnull(inserted.NOT_rValue1, 0) <> isnull(deleted.NOT_rValue1, 0) 		OR isnull(inserted.NOT_rValue2, 0) <> isnull(deleted.NOT_rValue2, 0) 		OR isnull(inserted.NOT_cValue, '') <> isnull(deleted.NOT_cValue, '') 	)  	while(exists(select * from @notifications)) 	begin 		declare @NOT_cID as uniqueidentifier 		declare @Inserted_NOT_dtLastModified as datetime 		declare @Deleted_NOT_dtLastModified as datetime 		declare	@NOT_cOperator as varchar(2) 		declare @NOT_rValue1 as real 		declare @NOT_rValue2 as real 		declare @NOT_cValue as nvarchar(100) 		declare @NOT_bActive as bit 		declare @NOT_dtDeleted as datetime  		select top 1 @NOT_cID = NOT_cID, 			@Inserted_NOT_dtLastModified = Inserted_NOT_dtLastModified, 			@Deleted_NOT_dtLastModified = Deleted_NOT_dtLastModified, 			@NOT_cOperator = NOT_cOperator, 			@NOT_rValue1 = NOT_rValue1, 			@NOT_rValue2 = NOT_rValue2, 			@NOT_cValue = NOT_cValue, 			@NOT_bActive = NOT_bActive, 			@NOT_dtDeleted = NOT_dtDeleted  		from @notifications  		-- Ferme le précédent 		if (@Deleted_NOT_dtLastModified is not null) 		begin 			update [dbo].[HNO_HistoryNotifications] 			set [HNO_dtDeleted] = @Inserted_NOT_dtLastModified, [HNO_dtLastModified] = dbo.GetCurrentDateTime() 			where [NOT_cID] = @NOT_cID 			and [HNO_dtDeleted] is null 		end  		-- Insert history 		if (@NOT_bActive = 1) and (@NOT_dtDeleted is null) 		begin 			INSERT INTO [dbo].[HNO_HistoryNotifications] 				([HNO_cID] 				,[HNO_dtCreated] 				,[HNO_dtLastModified] 				,[HNO_dtDeleted] 				,[NOT_cID] 				,[HNO_cOperator] 				,[HNO_rValue1] 				,[HNO_rValue2] 				,[HNO_cValue]) 			VALUES 				(newid() 				,@Inserted_NOT_dtLastModified 				,dbo.GetCurrentDateTime() 				,null 				,@NOT_cID 				,@NOT_cOperator 				,@NOT_rValue1 				,@NOT_rValue2 				,@NOT_cValue) 		end  		delete from @notifications where NOT_cID = @NOT_cID 	end 	 END ",2015-05-22 11:28:24.430,2015-05-10 09:40:53.470,0,"U ",TR,SQL_TRIGGER,0,1,1,1,1
OPE_Operations,1641772906,OPE_Operations_Trigger,"-- ============================================= -- Author:		Jean-Pierre Poulin -- Create date: 2012-11-27 -- Description: Trigger pour updater COB_CacheObjects -- ============================================= CREATE TRIGGER [dbo].[OPE_Operations_Trigger]    ON  [dbo].[OPE_Operations]    AFTER INSERT,DELETE,UPDATE AS  BEGIN 	SET NOCOUNT ON;  		-- Insert statements for trigger here 	declare @clientId as uniqueidentifier 	declare @table table (CLI_cID uniqueidentifier)  	insert into @table (CLI_cID) select distinct(CLI_cID) from deleted union select distinct(CLI_cID) from inserted  	while ((select count(*) from @table) > 0) 	begin 		select top 1 @clientId = CLI_cID from @table 		exec dbo.COB_Update_FromTrigger 'Operation', null, @clientId 		delete from @table where CLI_cID = @clientId 	end END ",2015-05-22 11:28:24.453,2015-05-10 09:40:45.250,0,"U ",TR,SQL_TRIGGER,0,1,1,1,1
PLB_ProductionLineBatches,1657772963,PLB_ProductionLineBatches_Trigger,"-- ============================================= -- Author:		Jean-Pierre Poulin -- Create date: 2013-03-29 -- Description: Trigger pour updater COB_CACHE_OBJECT -- ============================================= CREATE TRIGGER [dbo].[PLB_ProductionLineBatches_Trigger]    ON  [dbo].[PLB_ProductionLineBatches]    AFTER INSERT,DELETE,UPDATE AS  BEGIN 	SET NOCOUNT ON;  	    -- Insert statements for trigger here 	declare @clientId as uniqueidentifier 	declare @selectTable table (PLI_cID uniqueidentifier) 	declare @table table (CLI_cID uniqueidentifier)  	insert into @selectTable (PLI_cID) select distinct(PLI_cID) from deleted union select distinct(PLI_cID) from inserted  	insert into @table (CLI_cID) select distinct(CLI_cID) from @selectTable TB 	join [dbo].[PLI_ProductionLines] pli on pli.PLI_cID = TB.PLI_cID  	while ((select count(*) from @table) > 0) 	begin 		select top 1 @clientId = CLI_cID from @table 		exec dbo.COB_Update_FromTrigger 'Production', null, @clientId 		delete from @table where CLI_cID = @clientId 	end END ",2015-05-22 11:28:24.470,2015-05-10 09:40:41.817,0,"U ",TR,SQL_TRIGGER,0,1,1,1,1
PLI_ProductionLines,1673773020,PLI_ProductionLines_Trigger," -- ============================================= -- Author:		Jean-Pierre Poulin -- Create date: 2012-11-27 -- Description: Trigger pour updater COB_CacheObjects -- ============================================= CREATE TRIGGER [dbo].[PLI_ProductionLines_Trigger]    ON  [dbo].[PLI_ProductionLines]    AFTER INSERT,DELETE,UPDATE AS  BEGIN 	SET NOCOUNT ON;  		-- Insert statements for trigger here 	declare @clientId as uniqueidentifier 	declare @table table (CLI_cID uniqueidentifier)  	insert into @table (CLI_cID) select distinct(CLI_cID) from deleted union select distinct(CLI_cID) from inserted  	while ((select count(*) from @table) > 0) 	begin 		select top 1 @clientId = CLI_cID from @table 		exec dbo.COB_Update_FromTrigger 'ProductionLine', null, @clientId 		delete from @table where CLI_cID = @clientId 	end  END ",2015-05-22 11:28:24.497,2015-05-10 09:40:40.850,0,"U ",TR,SQL_TRIGGER,0,1,1,1,1
PRD_Products,1689773077,PRD_Products_Trigger,"-- ============================================= -- Author:		Jean-Pierre Poulin -- Create date: 2012-11-27 -- Description: Trigger pour updater COB_CacheObjects -- ============================================= CREATE TRIGGER [dbo].[PRD_Products_Trigger]    ON  [dbo].[PRD_Products]    AFTER INSERT,DELETE,UPDATE AS  BEGIN 	SET NOCOUNT ON; 	     -- Insert statements for trigger here 	declare @clientId as uniqueidentifier 	declare @table table (CLI_cID uniqueidentifier)  	insert into @table (CLI_cID) select distinct(CLI_cID) from deleted union select distinct(CLI_cID) from inserted  	while ((select count(*) from @table) > 0) 	begin 		select top 1 @clientId = CLI_cID from @table 		exec dbo.COB_Update_FromTrigger 'Product', null, @clientId 		delete from @table where CLI_cID = @clientId 	end  	-- Insert history in [HPR_HistoryProducts] 	insert [dbo].[HPR_HistoryProducts] ([HPR_cID], [PRD_cID], [HPR_dtEnd], [HPR_cConfig]) 	select newid() as [HPR_cID], 		   inserted.[PRD_cID], 		   inserted.PRD_dtLastModified as [HPR_dtEnd], 		   deleted.[PRD_cConfig] as [HPR_cConfig] 	from deleted 	join inserted on inserted.PRD_cID = deleted.PRD_cID 	where cast(deleted.PRD_cConfig as nvarchar(max)) <> cast(inserted.PRD_cConfig as nvarchar(max))		  END ",2015-05-22 11:28:24.520,2015-05-10 09:40:41.000,0,"U ",TR,SQL_TRIGGER,0,1,1,1,1
PRE_Preferences,1705773134,PRE_Preferences_Trigger,"-- ============================================= -- Author:		Jean-Pierre Poulin -- Create date: 2012-11-27 -- Description: Trigger pour updater COB_CacheObjects -- ============================================= CREATE TRIGGER [dbo].[PRE_Preferences_Trigger]    ON  dbo.PRE_Preferences    AFTER INSERT,DELETE,UPDATE AS  BEGIN 	SET NOCOUNT ON; 	     -- Insert statements for trigger here 	declare @clientId as uniqueidentifier 	declare @table table (CLI_cID uniqueidentifier)  	insert into @table (CLI_cID) select distinct(CLI_cID) from deleted union select distinct(CLI_cID) from inserted  	while ((select count(*) from @table) > 0) 	begin 		select top 1 @clientId = CLI_cID from @table 		exec dbo.COB_Update_FromTrigger 'Preference', null, @clientId 		delete from @table where CLI_cID = @clientId 	end END ",2015-05-22 11:28:24.543,2015-05-10 09:40:41.633,0,"U ",TR,SQL_TRIGGER,0,1,1,1,1
STR_StringResources,1721773191,STR_StringResources_Trigger,"-- ============================================= -- Author:		Jean-Pierre Poulin -- Create date: 2012-11-27 -- Description: Trigger pour updater COB_CacheObjects -- ============================================= CREATE TRIGGER [dbo].[STR_StringResources_Trigger]    ON  [dbo].[STR_StringResources]    AFTER INSERT,DELETE,UPDATE AS  BEGIN 	SET NOCOUNT ON; 	     -- Insert statements for trigger here 	exec dbo.COB_Update_FromTrigger 'StringResource'  	-- Inserer aussi les triggers qui affecte les objets caches qui peuvent être traduite 	exec dbo.COB_Update_FromTrigger 'MeasureDefinition' 	exec dbo.COB_Update_FromTrigger 'ProductionLine' 	exec dbo.COB_Update_FromTrigger 'Operation' 	exec dbo.COB_Update_FromTrigger 'DowntimeType' END ",2015-05-22 11:28:24.573,2015-05-10 09:40:51.120,0,"U ",TR,SQL_TRIGGER,0,1,1,1,1
TSI_TimeShifts,1737773248,TSI_TimeShifts_Trigger,"-- ============================================= -- Author:		Jean-Pierre Poulin -- Create date: 2012-11-27 -- Description: Trigger pour updater COB_CacheObjects -- ============================================= CREATE TRIGGER [dbo].[TSI_TimeShifts_Trigger]    ON  dbo.TSI_TimeShifts    AFTER INSERT,DELETE,UPDATE AS  BEGIN 	SET NOCOUNT ON; 	     -- Insert statements for trigger here 	declare @clientId as uniqueidentifier 	declare @PLI_cID as uniqueidentifier 	declare @table table (PLI_cID uniqueidentifier)  	insert into @table (PLI_cID) select distinct(PLI_cID) from deleted union select distinct(PLI_cID) from inserted  	while ((select count(*) from @table) > 0) 	begin 		select top 1 @clientId = p.CLI_cID, @PLI_cID = p.PLI_cID 		from @table t 		inner join PLI_ProductionLines p on p.PLI_cID = t.PLI_cID 		exec dbo.COB_Update_FromTrigger 'TimeShift', null, @clientId 		delete from @table where PLI_cID = @PLI_cID 	end END ",2015-05-22 11:28:24.610,2015-05-10 09:40:42.467,0,"U ",TR,SQL_TRIGGER,0,1,1,1,1
ULM_UserLineMeasures,1753773305,ULM_UserLineMeasures_Trigger,"-- ============================================= -- Author:		Jean-Pierre Poulin -- Create date: 2012-11-27 -- Description: Trigger pour updater COB_CacheObjects -- ============================================= CREATE TRIGGER [dbo].[ULM_UserLineMeasures_Trigger]    ON  dbo.ULM_UserLineMeasures    AFTER INSERT,DELETE,UPDATE AS  BEGIN 	SET NOCOUNT ON;  	declare @userId as uniqueidentifier 	declare @table table (USE_cID uniqueidentifier)  	insert into @table (USE_cID) select distinct(USE_cID) from deleted union select distinct(USE_cID) from inserted  	while ((select count(*) from @table) > 0) 	begin 		select top 1 @userId = USE_cID from @table 		exec dbo.COB_Update_FromTrigger 'UserLineMeasure', @userId 		delete from @table where USE_cID = @userId 	end  END ",2015-05-22 11:28:24.633,2015-05-10 09:40:42.240,0,"U ",TR,SQL_TRIGGER,0,1,1,1,1
URI_UserRights,1369771937,URI_UserRights_Trigger,"-- ============================================= -- Author:		Jean-Pierre Poulin -- Create date: 2012-11-27 -- Description: Trigger pour updater COB_CacheObjects -- ============================================= CREATE TRIGGER [dbo].[URI_UserRights_Trigger]    ON  [dbo].[URI_UserRights]    AFTER INSERT,DELETE,UPDATE AS  BEGIN 	SET NOCOUNT ON;  	 -- Insert statements for trigger here	 	declare @clientId as uniqueidentifier 	declare @selectTable table (CLI_cID uniqueidentifier) 	declare @table table (CLI_cID uniqueidentifier)  	insert into @table (CLI_cID) select distinct(CLI_cID) from deleted union select distinct(CLI_cID) from inserted  	while ((select count(*) from @table) > 0) 	begin 		select top 1 @clientId = CLI_cID from @table  		exec dbo.COB_Update_FromTrigger 'UserRight', null, @clientId 		exec dbo.COB_Update_FromTrigger 'MeasureDefinition', null, @clientId 		exec dbo.COB_Update_FromTrigger 'ProductionLine', null, @clientId 		exec dbo.COB_Update_FromTrigger 'UserLineMeasure', null, @clientId  		delete from @table where CLI_cID = @clientId 	end  	exec dbo.COB_Update_FromTrigger 'StringResource' -- Temporaire car l'apps ne gère pas l'update de ligne de production en cas d'update des droits. À partir de la 2.1.1 on pourra enlever cette ligne. END   ",2015-05-21 20:06:24.330,2015-05-21 20:06:23.530,0,"U ",TR,SQL_TRIGGER,0,1,1,1,1
USE_Users,1769773362,USE_Users_Trigger,"-- ============================================= -- Author:		Jean-Pierre Poulin -- Create date: 2012-11-27 -- Description: Trigger pour updater COB_CacheObjects -- ============================================= CREATE TRIGGER [dbo].[USE_Users_Trigger]    ON  dbo.USE_Users    AFTER INSERT,DELETE,UPDATE AS  BEGIN 	SET NOCOUNT ON;  	declare @userId as uniqueidentifier 	declare @table table (USE_cID uniqueidentifier)  	insert into @table (USE_cID) select distinct(USE_cID) from deleted union select distinct(USE_cID) from inserted  	while ((select count(*) from @table) > 0) 	begin 		select top 1 @userId = USE_cID from @table 		exec dbo.COB_Update_FromTrigger 'User', @userId 		delete from @table where USE_cID = @userId 	end  	if (exists(select * from inserted)) 		execute InitUserPrefs  END ",2015-05-22 11:28:24.673,2015-05-10 09:40:40.460,0,"U ",TR,SQL_TRIGGER,0,1,1,1,1
USP_UserPrefs,1785773419,USP_UserPrefs_Trigger," -- ============================================= -- Author:		Jean-Pierre Poulin -- Create date: 2012-11-27 -- Description: Trigger pour updater COB_CacheObjects -- ============================================= create TRIGGER [dbo].[USP_UserPrefs_Trigger]    ON  [dbo].[USP_UserPrefs]    AFTER INSERT,DELETE,UPDATE AS  BEGIN 	SET NOCOUNT ON;  	declare @userId as uniqueidentifier 	declare @table table (USE_cID uniqueidentifier)  	insert into @table (USE_cID) select distinct(USE_cID) from deleted union select distinct(USE_cID) from inserted  	while ((select count(*) from @table) > 0) 	begin 		select top 1 @userId = USE_cID from @table 		exec dbo.COB_Update_FromTrigger 'UserPref', @userId 		delete from @table where USE_cID = @userId 	end  END ",2015-05-22 11:28:24.697,2015-05-10 09:41:00.130,0,"U ",TR,SQL_TRIGGER,0,1,1,1,1
